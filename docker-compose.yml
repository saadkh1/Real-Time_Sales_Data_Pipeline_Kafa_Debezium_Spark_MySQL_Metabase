version: '2'

networks:
    datapipeline:
        driver: bridge
        ipam:
            driver: default
            config:
                - subnet: "172.18.0.0/16"

services:  
  zookeeper:
    image: 'bitnami/zookeeper:3.9.1'
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      datapipeline:
        ipv4_address: 172.18.0.3
  
  kafka:
    image: 'bitnami/kafka:3.4.1'
    container_name: kafka
    hostname: kafka
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      zookeeper:
        condition: service_started
    volumes:
      - ./kafka/kafka-setup.sh:/kafka-setup.sh
    networks:
      datapipeline:
        ipv4_address: 172.18.0.4

# # # # # # # # # # # # # # # # # # # # # # # # # # MySql # # # # # # # # # # # # # # # # # # # # # # # # #

  mysql_manager:
    image: debezium/example-mysql:2.5
    container_name: Container_Manager_DB
    hostname: Manager_Host
    volumes:
      - ./mysql/Manager_DB/mysql-init.sql:/docker-entrypoint-initdb.d/mysql-init.sql
    environment:
      - MYSQL_ROOT_PASSWORD=secret
    command: ["--init-file", "/docker-entrypoint-initdb.d/mysql-init.sql"]
    networks:
      datapipeline:
        ipv4_address: 172.18.0.5
    restart: always

  mysql_1:
    image: debezium/example-mysql:2.5
    container_name: Container_Jendouba_DB
    hostname: Jendouba_Host
    volumes:
      - ./mysql/Jendouba_DB/mysql-init.sql:/docker-entrypoint-initdb.d/mysql-init.sql
    environment:
      - MYSQL_ROOT_PASSWORD=secret
    command: ["--init-file", "/docker-entrypoint-initdb.d/mysql-init.sql"]
    networks:
      datapipeline:
        ipv4_address: 172.18.0.6
    restart: always

  mysql_2:
    image: debezium/example-mysql:2.5
    container_name: Container_Beja_DB
    hostname: Beja_Host
    volumes:
      - ./mysql/Beja_DB/mysql-init.sql:/docker-entrypoint-initdb.d/mysql-init.sql
    environment:
      - MYSQL_ROOT_PASSWORD=secret
    command: ["--init-file", "/docker-entrypoint-initdb.d/mysql-init.sql"]
    networks:
      datapipeline:
        ipv4_address: 172.18.0.7
    restart: always

  mysql_3:
    image: debezium/example-mysql:2.5
    container_name: Container_Kef_DB
    hostname: Kef_Host
    volumes:
      - ./mysql/Kef_DB/mysql-init.sql:/docker-entrypoint-initdb.d/mysql-init.sql
    environment:
      - MYSQL_ROOT_PASSWORD=secret
    command: ["--init-file", "/docker-entrypoint-initdb.d/mysql-init.sql"]
    networks:
      datapipeline:
        ipv4_address: 172.18.0.8
    restart: always

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

  debezium:
    image: debezium/connect:2.5
    container_name: debezium
    ports:
      - '8083:8083'
    depends_on:
      - kafka
      - mysql_1
      - mysql_2
      - mysql_3
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
    networks:
      datapipeline:
        ipv4_address: 172.18.0.10

  spark-consumer:
    build:
      context: ./spark
      dockerfile: dockerfile
    container_name: spark-consumer
    restart: always
    networks:
      datapipeline:
        ipv4_address: 172.18.0.11

  api-mysql:
    build:
      context: ./api-mysql
      dockerfile: dockerfile
    container_name: api-mysql
    restart: always
    ports:
      - '5001:5000'
    networks:
      datapipeline:
        ipv4_address: 172.18.0.12

  metabase:
    image: metabase/metabase:latest
    restart: always
    ports:
      - 3000:3000
    networks:
      datapipeline:
        ipv4_address: 172.18.0.13
    





